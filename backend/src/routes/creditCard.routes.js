const express = require('express');
const Controller = require('../controllers/creditCard.controller');
const encryption = require('../middewares/encryption');
const { body} = require('express-validator');

const Router = express.Router();

/**
  * @swagger
  * /card:
  *  post:
  *      tags:
  *          - CREDIT CARD
  *      name: card
  *      produces:
  *          - application/json
  *      consumes:
  *          - application/json
  *      summary: This should add new credit card information.
  *      requestBody:
  *         content:
  *            application/json:
  *               schema:
  *                  type: object
  *                  properties:
  *                     creditCardNumber:
  *                        type: string
  *                        example: 012345678912345
  *                     creditCardCVV:
  *                        type: string
  *                        example: 123
  *                     creditCardHolder:
  *                        type: string
  *                     expireDate:
  *                        type: date,
  *                        example: 2019-05
  *      responses:
  *          200:
  *              description: New credit card created.
  */
Router.post('/',
  // Validate credit card number through luhn alogrithm
    body('creditCardNumber')
    .isNumeric()
    .isLength({ min: 16, max: 16 })
    .withMessage('card number must be 16 digit')
    .isCreditCard()
    .withMessage('must enter valid card'),

    body('creditCardCVV')
    .isLength({ max: 3, min:3 })
    .withMessage('cvv number must be 3 digit')
    .isNumeric()
    .withMessage('must enter valid cvv')    , 

    body('creditCardHolder')
    .isLength({ min: 3 })
    .withMessage('name atleast three characters')
    .isAlpha()
    .withMessage('must enter valid name'),
    
    body('expireDate')
    .not()
    .isEmpty()
    .isISO8601('dd-mm-yyyy')
    .withMessage('date is required'),
[encryption, Controller.createCardRawQuery]);


/**
  * @swagger
  * /card/sequelize:
  *  post:
  *      tags:
  *          - CREDIT CARD
  *      name: card
  *      produces:
  *          - application/json
  *      consumes:
  *          - application/json
  *      summary: This should add new credit card information.
  *      requestBody:
  *         content:
  *            application/json:
  *               schema:
  *                  type: object
  *                  properties:
  *                     creditCardNumber:
  *                        type: string
  *                        example: 012345678912345
  *                     creditCardCVV:
  *                        type: string
  *                        example: 123
  *                     creditCardHolder:
  *                        type: string
  *                     expireDate:
  *                        type: date,
  *                        example: 2019-05
  *      responses:
  *          200:
  *              description: New credit card created.
  */
 Router.post('/sequelize',
 // Validate credit card number through luhn alogrithm
 body('creditCardNumber')
 .isNumeric()
 .isLength({ min: 16, max: 16 })
 .withMessage('card number must be 16 digit')
 .isCreditCard()
 .withMessage('must enter valid card'),

 body('creditCardCVV')
 .isLength({ max: 3, min:3 })
 .withMessage('cvv number must be 3 digit')
 .isNumeric()
 .withMessage('must enter valid cvv')    , 

 body('creditCardHolder')
 .isLength({ min: 3 })
 .withMessage('name atleast three characters')
 .isAlpha()
 .withMessage('must enter valid name'),
 
 body('expireDate')
 .not()
 .isEmpty()
 .isISO8601('dd-mm-yyyy')
 .withMessage('date is required'),
[encryption, Controller.createCardAutoGeneratedQuery]);

module.exports = Router;
